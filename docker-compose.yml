version: "3"
services:
  cucinapp_proxy:
    build: ./cucinapp_proxy
    depends_on:
      - api_gateway
    ports:
      - "80:80"

  api_gateway:
    build: ./api_gateway
    ports:
      - "8080:8080"
    depends_on:
      - users_ms
      - recipes_ms
      - comments_ms
      - collections_ms
    command: bash -c "sleep 40 && node app.js"
    environment:
      RECIPES_URL: 192.168.99.100
      RECIPES_PORT: 8081
      COLLECTIONS_URL: 192.168.99.100
      COLLECTIONS_PORT: 8082
      USERS_URL: 192.168.99.100
      USERS_PORT: 8083
      NOTIFICATIONS_URL: 192.168.99.100
      NOTIFICATIONS_PORT: 8084
      COMMENTS_URL: 192.168.99.100
      COMMENTS_PORT: 8085

  ldap_server:
    image: osixia/openldap
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LDAP_ORGANISATION: "Cucinapp"
      LDAP_DOMAIN: "cucinapp.com"
      LDAP_BACKEND: "hdb"
    tty: true
    stdin_open: true
    volumes:
      - /var/lib/ldap
      - /etc/ldap/slapd.d
    ports:
      - "389:389"
      - "689:689"

  phpldapadmin:
    image: osixia/phpldapadmin
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "ldap_server"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8086:80"
    links:
      - ldap_server

  recipes_ms:
    build: ./recipes_ms
    ports:
      - "8081:8081"
    depends_on:
      - recipes_db
    command: bash -c "sleep 40 && node app.js"
    environment:
      MONGO_URL: mongodb://recipes_db:27017/recipes_ms
      PORT: 8081

  recipes_db:
    image: mongo
    ports:
      - "27017:27017"
  
  collections_ms:
    image: collectionsapp:${WEBAPP_VERSION}
    build:
      context: ./collections_ms
      dockerfile: App.dockerfile
      args:
        WEBAPP_VERSION: ${WEBAPP_VERSION}
        URL_PORT: ${URL_PORT}
    ports:
      - "${URL_PORT}:${URL_PORT}"
    volumes:
      - appbuild:/app
    links:
      - collections_db
    environment:
      MYSQL_SERVER_NAME: ${MYSQL_SERVER_NAME}
    env_file:
      - ./secrets.env
    depends_on:
      - collections_ms_builder
  
  collections_ms_builder:
    image: collectionsapp:${BUILDER_VERSION}.${BUILD_CONFIG}
    build:
      context: ./collections_ms
      dockerfile: Build.dockerfile
      args:
        BUILDER_VERSION: ${BUILDER_VERSION}
        BUILD_CONFIG: ${BUILD_CONFIG}
        BUILD_LOCATION: ${BUILD_LOCATION}
    volumes:
      - appbuild:${BUILD_LOCATION}
  
  collections_db:
    image: mysql/mysql-server:5.7
    restart: always
    volumes:
      - dbvol:/var/lib/mysql
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: !!str yes
    env_file:
      - ./secrets.env
  
  comments_ms:
    build: ./comments_ms
    ports:
      - "8085:8085"
    depends_on:
      - comments_db
    command: bash -c "sleep 40 && python3 run.py"
    environment:
      MONGO_URI: mongodb://comments_db:27019/comments

  comments_db:
    image: mongo
    command: mongod --port 27019
    ports:
      - "27019:27019"

  users_ms:
    build: ./users_ms
    command: bash -c "sleep 40 && rails db:create && rails db:migrate && rails s -p 8083 -b 0.0.0.0"
    ports:
      - "8083:8083"
    depends_on:
      - users_db
      - ldap_server
    environment:
      LDAP_HOST: 192.168.99.100
      LDAP_PORT: 389
      LDAP_ADMIN_PASSWORD: admin

  users_db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
     POSTGRES_PASSWORD: password

volumes:
  dbvol:
  appbuild: