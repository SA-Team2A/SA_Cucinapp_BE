type Collection {
	id: ID!
	userID: Int!
	name: String!
}

type Recipe {
	id: ID!
	collectionID: Int!
	recipeID: Int!
  name: String!
}

input CollectionInput {
	userID: Int!
	name: String!
}

input RecipeInput {
	collectionID: Int!
	recipeID: Int!
	name: String!
}

type Query {
	getCollections: [Collection!]
  getCollection(id: ID!): Collection!

  getRecipes: [Recipe!]
  getRecipe(id: ID!): Recipe!
}

# Mutations
type Mutation {
	createCollection(input: CollectionInput!): Collection!
  createRecipe(input: RecipeInput!): Recipe!
  
	updateCollection(id: ID!, input: CollectionInput!): Collection!
  updateRecipe(id: ID!, input: RecipeInput!): Recipe!
	
	deleteCollection(id: ID!): Collection!
  deleteRecipe(id: ID!): Recipe!
}